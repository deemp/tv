version: "3.2"
services:
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.11-management
    ports:
      - ${MQ_PORT_CONTAINER}:${MQ_PORT_CONTAINER}
      - ${MQ_TCP_PORT}:${MQ_TCP_PORT_CONTAINER}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      &networks
      - rabbitmq_net
    extra_hosts:
      &extra_hosts
      - "host.docker.internal:host-gateway"

  consumer:
    container_name: consumer_container
    depends_on:
      - rabbitmq
      # - postgres
    build:
      context: ./consumer
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./consumer/app:/app
    networks: *networks
    extra_hosts: *extra_hosts

  producer:
    container_name: producer_container
    depends_on:
      - consumer
    build:
      context: ./producer
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./producer/app:/app
    networks: *networks
    extra_hosts: *extra_hosts
  # # https://towardsdatascience.com/how-to-run-postgresql-and-pgadmin-using-docker-3a6a8ae918b5
  # postgres:
  #   container_name: postgres_container
  #   image: postgres:15
  #   restart: always
  #   volumes:
  #     - /var/run/postgresql:/var/run/postgresql
  #   ports:
  #     - ${POSTGRES_PORT}:${POSTGRES_PORT_CONTAINER}
  #   networks: *networks

  # pgadmin:
  #   depends_on:
  #     - postgres
  #   container_name: pgadmin4_container
  #   image: dpage/pgadmin4
  #   restart: always
  #   ports:
  #     - ${PGADMIN_PORT}:${PGADMIN_PORT_CONTAINER}
  #   networks: *networks

networks:
  rabbitmq_net:
    driver: bridge

# https://github.com/docker-library/rabbitmq/issues/530#issuecomment-1012985283
volumes:
  rabbitmq_data:
  rabbitmq_log:
  pg_data:
